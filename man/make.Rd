% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rflow_management.R
\name{make}
\alias{make}
\alias{make.node}
\alias{make.character}
\alias{make.rflow}
\alias{make.list}
\title{Make/build target or multiple targets}
\usage{
make(x, ...)

\method{make}{node}(x, force = FALSE, verbose = TRUE, verbose_prefix = "")

\method{make}{character}(x, rflow, force = FALSE, verbose = TRUE, verbose_prefix = "")

\method{make}{rflow}(
  x,
  tags = NULL,
  leaves_only = TRUE,
  force = FALSE,
  tagsMatchLogic = "all",
  verbose = TRUE
)

\method{make}{list}(x, ...)
}
\arguments{
\item{x}{node's id or rflow object}

\item{force}{logical; force eval()?}

\item{verbose}{logical; Print verbose output?}

\item{tags}{filter nodes by tags}

\item{leaves_only}{logical; Option to run make only from ending nodes. Avoids redundant visits on intermediate nodes.}
}
\description{
Make/build target or multiple targets
}
\details{
There are multiple ways (S3 methods) to choose targets for building. See examples.

The tags parameter can be used to filter nodes in two modes depending on length of the argument. A character vector of lenght > 1 results in union of matches. A scalar character value is applied as a regular expression.
}
\examples{
\dontrun{
make(RF$mynode)
}
\dontrun{
make(c("mynode", "othernode"), RF)
}
\dontrun{
make(RF, tags = "DB")
}
\dontrun{
nodes(RF) \%>\% FilterWith("DB" \%in\% tags & .last_evaluted < Sys.date()) \%>\% make()
}
}
